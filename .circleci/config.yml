version: 2

jobs:
  test:
    docker:
      - image: rust:1
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Calculate dependencies
          command: cd nimbus && cargo generate-lockfile
      - restore_cache:
          keys:
            - v4-cargo-cache-{{ arch }}-{{ checksum "nimbus/Cargo.lock" }}
      - run:
          name: Build all targets
          command: cd nimbus && cargo build --all --all-targets
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - nimbus/target/debug/.fingerprint
            - nimbus/target/debug/build
            - nimbus/target/debug/deps
          key: v4-cargo-cache-{{ arch }}-{{ checksum "nimbus/Cargo.lock" }}
      - run:
          name: Run all tests (rkv lmdb mode)
          command: cd nimbus &&  cargo test --no-default-features --all
      - run:
          name: Run all tests (rkv safe mode)
          command: cd nimbus &&  cargo test --all
      - run:
          name: Check formatting
          command: |
            if rustup component add rustfmt; then
              cd nimbus && cargo fmt --all -- --check
            else
              echo Skipping rustfmt
            fi
      - run:
          name: Check clippy lints
          command: |
            if rustup component add clippy; then
              cd nimbus && cargo clippy --all --all-targets --all-features -- -D warnings
            else
              echo Skipping clippy lints
            fi

  coverage:
    machine: true
    steps:
      - checkout
      - run:
          name: Pull tarpaulin Docker image
          command: docker pull xd009642/tarpaulin:latest
      - run:
          name: Generate coverage report
          # We use --no-default-features so we don't have to compile uniffi (very slow).
          command: >
            docker run --security-opt seccomp=unconfined -v $PWD:/volume xd009642/tarpaulin
            cargo tarpaulin --manifest-path nimbus/Cargo.toml --no-default-features -v --ciserver circle-ci --out Xml
      - run:
          name: Upload report to Codecov
          command: bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  test_and_coverage:
    jobs:
      - test
      - coverage
